name: Release Build

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

env:
  FLUTTER_VERSION: "3.35.3"
  JAVA_VERSION: "17"

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV }}" > .env

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release --split-per-abi --dart-define-from-file=.env

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: build/app/outputs/flutter-apk/*.apk

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV }}" > .env

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release --dart-define-from-file=.env

      - name: Create Windows ZIP
        run: |
          cd build/windows/x64/runner/Release
          7z a -tzip ../../../../../oikad-windows-x64.zip *

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: oikad-windows-x64.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV }}" > .env

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Build macOS
        run: flutter build macos --release --dart-define-from-file=.env

      - name: Create macOS app bundle
        run: |
          cd build/macos/Build/Products/Release
          tar -czf ../../../../../oikad-macos-arm64.app.tar.gz oikad.app

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: oikad-macos-arm64.app.tar.gz

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV }}" > .env

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Build Linux
        run: flutter build linux --release --dart-define-from-file=.env

      - name: Create Linux binary
        run: |
          cd build/linux/x64/release/bundle
          tar -czf ../../../../../oikad-linux-x64.tar.gz *

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: oikad-linux-x64.tar.gz

  create-release:
    needs: [build-android, build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Android APKs
        run: |
          for apk in android-apks/*.apk; do
            filename=$(basename "$apk")
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/vnd.android.package-archive" \
              --data-binary @"$apk" \
              "${{ steps.create_release.outputs.upload_url }}?name=${filename}&label=${filename}"
          done

      - name: Upload Windows EXE
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows-exe/oikad-windows-x64.zip
          asset_name: oikad-windows-x64.zip
          asset_content_type: application/zip

      - name: Upload macOS App
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos-app/oikad-macos-arm64.app.tar.gz
          asset_name: oikad-macos-arm64.app.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux-binary/oikad-linux-x64.tar.gz
          asset_name: oikad-linux-x64.tar.gz
          asset_content_type: application/gzip
